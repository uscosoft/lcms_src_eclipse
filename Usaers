package org.uscosoft.users;

import java.io.IOException;
import java.io.PrintWriter;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;

import javax.servlet.ServletException;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.uscosoft.utilidad.BaseDato;

/**
 * Servlet implementation class Users
 */
public class Users extends HttpServlet {
  private static final long serialVersionUID = 1L;
       
    /**
     * @see HttpServlet#HttpServlet()
     */
    public Users() {
        super();
        // TODO Auto-generated constructor stub
    }

    
	/**
	 * @see HttpServlet#doGet(HttpServletRequest request, HttpServletResponse response)
	 */
	protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		// TODO Auto-generated method stub
		doPost(request, response);
	}

	/**
	 * @see HttpServlet#doPost(HttpServletRequest request, HttpServletResponse response)
	 */
	protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		// TODO Auto-generated method stub
		PrintWriter out = response.getWriter();
		
		String metodo = request.getParameter("metodo");
		
		if(metodo.equals("getUsers")){
			response.setContentType("text/xml");
			String respuesta = getUsers(request);
			out.println(respuesta);
		}
		
		//System.out.println(metodo);
		

		if(metodo.equals("getPersonas")){
			response.setContentType("text/xml");
			String respuesta = getPersonas(request);
			out.println(respuesta);
		}
		
		if(metodo.equals("getEstados")){
			response.setContentType("text/xml");
			String respuesta = getEstados(request);
			out.println(respuesta);
		}
		
		if(metodo.equals("editar")){
			response.setContentType("text/xml");
			String respuesta = editar(request);
			out.println(respuesta);
		}
		
		//System.out.println("final");	
	}
	
	public String editar(HttpServletRequest request){
		String respuesta = "";
		
		BaseDato basedato = new BaseDato();
		
		Connection conexion1 = null;
		Statement sentencia1 = null;
		ResultSet rs1 = null;
		
		String sql = "";
		
		try{
			conexion1 = basedato.getConexion("ADMINISTRADOR_SISTEMA");
			sentencia1 = conexion1.createStatement();
			
			String accion = request.getParameter("accion");
			String codigo = request.getParameter("codigo");
						
			String persona = request.getParameter("persona");
			String login = request.getParameter("login");
			String password = request.getParameter("password");
			String estado = request.getParameter("estado");			
			String usuario = "0";
			
			String login1 = request.getUserPrincipal().getName();
			
			sql = "select usu_codigo from usuario where usu_login = '" + login1 + "'";
						
			rs1 = sentencia1.executeQuery(sql);
			
			if(rs1.next()){
				usuario = rs1.getString("usu_codigo");
			}
					
			if(accion.toUpperCase().equals("ADICIONAR")){
				sql = "INSERT INTO usuario(usu_persona, usu_login, usu_password, usu_estado)";
			    sql = sql + "VALUES (" + persona + ",'" + login + "','" + password + "'," + estado + ")";
			}
			if(accion.toUpperCase().equals("MODIFICAR")){
				sql = "UPDATE usuario";
				sql = sql + " SET usu_persona = " + persona;
				sql = sql + " , usu_login = '" + login + "'";
				sql = sql + " , usu_password = '" + password + "'";
				sql = sql + " , usu_estado = " + estado; 				
				sql = sql + " WHERE usu_codigo = " + codigo;
		
			}
			if(accion.toUpperCase().equals("ELIMINAR")){
				sql = "DELETE FROM usuario";
				sql = sql + " WHERE usu_codigo = " + codigo;
			}

			
			int actualizados = sentencia1.executeUpdate(sql);
			
			if(actualizados > 0){
				respuesta = "<respuesta exito='true'>";
				respuesta = respuesta + "<codigo>48</codigo>";
				respuesta = respuesta + "<mensaje>Operaciï¿½n ejecutada exitosamente.</mensaje>";
				respuesta = respuesta + "</respuesta>";
			}
			else{
				
				respuesta = "<respuesta exito='false'>";
				respuesta = respuesta + "<errors>";
				respuesta = respuesta + "<field>";
				respuesta = respuesta + "<id>nombre</id>";
				respuesta = respuesta + "<msg> Nombre no valido. <br /><i>Por favor digite el nombre del recurso </i> </msg>";
				respuesta = respuesta + "</field>";
				respuesta = respuesta + "</errors>";
				respuesta = respuesta + "</respuesta>";
				
			}
				
		}
		catch(Exception e){
			System.out.println("Error: " + e.toString());
		}
		finally{
			if(rs1 != null){
				try {
					rs1.close();
				} catch (SQLException e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
				}
			}
			rs1 = null;
			
			if(sentencia1 != null){
				try {
					sentencia1.close();
				} catch (SQLException e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
				}
			}
			sentencia1 = null;
			
			if(conexion1 != null){
				try {
					conexion1.close();
				} catch (SQLException e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
				}
			}
			conexion1 = null;
		}
		
		
		return respuesta;
	}
	
	public String getUsers(HttpServletRequest request){
		String respuesta = "";
		
		BaseDato basedato = new BaseDato();
		
		Connection conexion1 = null;
		Statement sentencia1 = null;
		ResultSet rs1 = null;
		
		String sql = "";
		try{
			conexion1 = basedato.getConexion("ADMINISTRADOR_SISTEMA");
			sentencia1 = conexion1.createStatement();
			
			String codigo = request.getParameter("codigo");
			
			String limit = request.getParameter("limit");
			String start = request.getParameter("start");
			
			if(codigo == null){
				codigo = "0";
			}
			if(limit == null){
				limit = "10";
			}
			if(start == null){
				start = "0";
			}
			
			int total_registros = 0;
			sql = "select count(*) as total from usuario";
			rs1 = sentencia1.executeQuery(sql);
			if(rs1.next()){
				total_registros = rs1.getInt("total");
			}
			
			sql = "select * from usuario";
			
			if(!codigo.equals("0")){
				sql = sql + " where usu_codigo = " + codigo;
			}
			
			sql = sql + " offset " + start;
			sql = sql + " limit " + limit;
			rs1 = sentencia1.executeQuery(sql);
			
			respuesta = "<datos>";
			respuesta = respuesta + "<info>";
			respuesta = respuesta + "<total>" + total_registros + "</total>";
			respuesta = respuesta + "</info>";
			
			respuesta = respuesta + "<registros>";
			
			while(rs1.next()){
				codigo = rs1.getString("usu_codigo");
				String persona = rs1.getString("usu_persona");
				String login = rs1.getString("usu_login");
				String password = rs1.getString("usu_password");
				String estado = rs1.getString("usu_estado");
				
				respuesta = respuesta + "<registro>";
				respuesta = respuesta + "<codigo>" + codigo + "</codigo>";
				respuesta = respuesta + "<persona>" + persona + "</persona>";
				respuesta = respuesta + "<login>" + login + "</login>";
				respuesta = respuesta + "<password>" + password + "</password>";
				respuesta = respuesta + "<estado>" + estado + "</estado>";			
				respuesta = respuesta + "</registro>";
			}
			
			respuesta = respuesta + "</registros>";
			respuesta = respuesta + "</datos>";
			
		}
		catch(Exception e){
			System.out.println("Error: " + e.toString());
		}
		finally{
			if(rs1 != null){
				try {
					rs1.close();
				} catch (SQLException e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
				}
			}
			rs1 = null;
			
			if(sentencia1 != null){
				try {
					sentencia1.close();
				} catch (SQLException e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
				}
			}
			sentencia1 = null;
			
			if(conexion1 != null){
				try {
					conexion1.close();
				} catch (SQLException e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
				}
			}
			conexion1 = null;
		}
		
		
		return respuesta;
	}
	

	public String getPersonas(HttpServletRequest request){
		String respuesta = "";
		
		BaseDato basedato = new BaseDato();
		
		Connection conexion1 = null;
		Statement sentencia1 = null;
		ResultSet rs1 = null;
		
		String sql = "";
		try{			
			conexion1 = basedato.getConexion("ADMINISTRADOR_SISTEMA");
			sentencia1 = conexion1.createStatement();
			
			
			sql = "select * from persona";
			rs1 = sentencia1.executeQuery(sql);
			
			
			respuesta = "<registros>";
			
			while(rs1.next()){
				String codigo = rs1.getString("per_codigo");
				String nombre = rs1.getString("per_nombre");
								
				respuesta = respuesta + "<registro>";
				respuesta = respuesta + "<codigo>" + codigo + "</codigo>";
				respuesta = respuesta + "<nombre>" + nombre + "</nombre>";
				respuesta = respuesta + "</registro>";
			}
			
			respuesta = respuesta + "</registros>";
			
		}
		catch(Exception e){
			System.out.println("Error: " + e.toString());
		}
		finally{
			if(rs1 != null){
				try {
					rs1.close();
				} catch (SQLException e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
				}
			}
			rs1 = null;
			
			if(sentencia1 != null){
				try {
					sentencia1.close();
				} catch (SQLException e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
				}
			}
			sentencia1 = null;
			
			if(conexion1 != null){
				try {
					conexion1.close();
				} catch (SQLException e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
				}
			}
			conexion1 = null;
		}
		
		return respuesta;
	}
	
	public String getEstados(HttpServletRequest request){
		String respuesta = "";
		
		BaseDato basedato = new BaseDato();
		
		Connection conexion1 = null;
		Statement sentencia1 = null;
		ResultSet rs1 = null;
		
		String sql = "";
		
		try{			
			conexion1 = basedato.getConexion("ADMINISTRADOR_SISTEMA");
			sentencia1 = conexion1.createStatement();
			
			
			sql = "select * from tipo_estado_usuario";
			rs1 = sentencia1.executeQuery(sql);
			
			respuesta = "<registros>";
			
			while(rs1.next()){
				String codigo = rs1.getString("teu_codigo");
				String nombre = rs1.getString("teu_nombre");
				
				
				respuesta = respuesta + "<registro>";
				respuesta = respuesta + "<codigo>" + codigo + "</codigo>";
				respuesta = respuesta + "<nombre>" + nombre + "</nombre>";
				respuesta = respuesta + "</registro>";
			}
			
			respuesta = respuesta + "</registros>";
			
		}
		catch(Exception e){
			System.out.println("Error: " + e.toString());
		}
		finally{
			if(rs1 != null){
				try {
					rs1.close();
				} catch (SQLException e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
				}
			}
			rs1 = null;
			
			if(sentencia1 != null){
				try {
					sentencia1.close();
				} catch (SQLException e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
				}
			}
			sentencia1 = null;
			
			if(conexion1 != null){
				try {
					conexion1.close();
				} catch (SQLException e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
				}
			}
			conexion1 = null;
		}
		
		return respuesta;
	}
}
